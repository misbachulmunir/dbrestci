<?php

defined('BASEPATH') OR exit('No direct script access allowed');

// This can be removed if you use __autoload() in config.php OR use Modular Extensions
/** @noinspection PhpIncludeInspection */
require APPPATH . '/libraries/REST_Controller.php';

// use namespace
use Restserver\Libraries\REST_Controller;

/**
 * This is an example of a few basic user interaction methods you could use
 * all done with a hardcoded array
 *
 * @package         CodeIgniter
 * @subpackage      Rest Server
 * @category        Controller
 * @author          Phil Sturgeon, Chris Kacerguis
 * @license         MIT
 * @link            https://github.com/chriskacerguis/codeigniter-restserver
 */
class Mahasiswa extends REST_Controller {

    function __construct()
    {
        // Construct the parent class
        parent::__construct();

        // Configure limits on our controller methods
        // Ensure you have created the 'limits' table and enabled 'limits' within application/config/rest.php
        $this->methods['users_get']['limit'] = 500; // 500 requests per hour per user/key
        $this->methods['users_post']['limit'] = 100; // 100 requests per hour per user/key
        $this->methods['users_delete']['limit'] = 50; // 50 requests per hour per user/key
    }

    public function get_get()
    {
        $id = $this->get('id');

        if ($id === NULL)
        {
            $users= $this->db->get("tbl_mahasiswa")->result_array();
            
            if ($users)
            {
                
                $this->response($users, REST_Controller::HTTP_OK); // OK (200) being the 
            }
            else
            {
               
                $this->response([
                    'status' => FALSE,
                    'message' => 'No users were found'
                ], REST_Controller::HTTP_NOT_FOUND); // NOT_FOUND (404) being the HTTP 
            }
        }

       
    }

    public function create_post()
    {
        // $this->some_model->update_user( ... );
        $data = [
           // 'id' => 100, // Automatically generated by the model
            'nama' => $this->post('nama'),
            'tgl_lahir' => $this->post('tgl_lahir'),
            'jenis_kelamin' => $this->post('jenis_kelamin'),
            'jurusan' => $this->post('jurusan'),
            'alamat' => $this->post('alamat')
          
        ];
        $this->db->insert("tbl_mahasiswa",$data);

        $this->set_response($data, REST_Controller::HTTP_CREATED); 
    }

    public function hapus_post()
    {
        $id = $this->post('id');
       
        $message = [
            'id' => $id,
            
        ];
        $qrydelete="delete from tbl_mahasiswa where id='$id'";
        $this->db->query($qrydelete);
      
        $this->response($users, REST_Controller::HTTP_OK); //

        
    }

    public function update_post(){

        //tangkap data

        $id = $this->post("id");
        $nama = $this->post("nama");
        $tgl_lahir = $this->post("tgl_lahir");
        $jenis_kelamin = $this->post("jenis_kelamin");
        $jurusan = $this->post("jurusan");
        $alamat = $this->post("alamat");
        
        $message = [
            'id' => $id,
            
        ];
        $qryupdate="update tbl_mahasiswa set nama='$nama',tgl_lahir='$tgl_lahir',jenis_kelamin='$jenis_kelamin',jurusan='$jurusan',alamat='$alamat' where id='$id'";

        //$where =array('id'->$qryupdate);

        $this->db->query($qryupdate);
        $this->set_response($message, REST_Controller::HTTP_NO_CONTENT); // NO_CONTENT (204) being the HTTP response code
        
    }
    public function addimage_upload(){
        $postData = $this->post();

        $config['upload_path'] ='./assets/img/logo/';
        $config['allowed_types'] ='gif|jpg|png|jpeg';
        $config['max_size'] =2048;
        $config['max_width'] =1024;
        $config['max_height'] =768;
        
        $this->load->library('upload',$config);
         
        if( $this->upload->do_upload('user_file')) 
        {
        $data = array('upload_data' => $this->upload->data());
   
        $this->set_response($returndata, 200); 
        }
        else
        {
        $error = array('error' => $this->upload->display_errors());
        $returndata = array('status'=>0,'data'=>$error,'message'=>'image upload failed');
        $this->set_response($returndata, 200); 
        }
        }
        public function fileFoto_post(){
            if(empty($_FILES)){
                $this->response(['success'=>false, 'message'=>'error'], REST_Controller::HTTP_OK);
            }
            
            
            $temp = explode(".", $_FILES["file"]["name"]); 
            $newfilename = SHA1("foto".$nip."_".(microtime(true)*10000)).'.'.end($temp);
    
    
            
        }

}
